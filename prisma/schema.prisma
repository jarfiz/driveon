generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean   @default(false)
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  sessions      Session[]
  accounts      Account[]
  Listing       Listing[]
  Booking       Booking[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("account")
}

model Verification {
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  @@map("verification")
}

model Vehicle {
  id            String   @id
  brand         String
  model         String
  year          DateTime
  license_plate String
  color         String
  description   String
  images        String[]
  status        String

  Listing Listing[]
  Booking Booking[]
}

model Listing {
  id             String @id
  price_per_day  String
  deposit_amount String
  status         String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
  vehicleId String

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String
}

model Booking {
  id             String   @id
  total_price    String // change later to decimal when the value is already clear
  payment_status String
  start_date     DateTime
  end_date       DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt

  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
  vehicleId String

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String
}
